'data.frame':	334 obs. of  16 variables:
 $ HW1: num  100 85 87.5 92.5 32.5 75 90 92.5 82.5 75 ...
 $ HW2: num  100 95 100 100 NA 85 100 95 85 95 ...
 $ HW3: num  100 100 85 100 65 92.5 97.5 100 92.5 95 ...
 $ HW4: num  100 95 70 100 60 95 95 90 70 95 ...
 $ HW5: num  100 95 100 96.2 NA ...
 $ HW6: num  100 95 98 99 46 91 80 72 NA 96 ...
 $ HW7: num  100 100 NA 100 NA NA 52 95 84 NA ...
 $ HW8: num  100 100 80 92.5 NA NA 90 74.5 90 100 ...
 $ HW9: num  100 100 NA 95 NA 90 90 100 95 98 ...
 $ ATT: int  12 12 7 12 5 9 12 12 12 12 ...
 $ QZ1: num  12 11 10 8 5 11 11 10 11 7 ...
 $ QZ2: int  18 16 10 16 9 17 9 8 18 10 ...
 $ QZ3: num  20 18 10 13 NA NA 15 12 14 13 ...
 $ QZ4: int  20 19 NA 13 NA 15 18 13 19 16 ...
 $ EX1: num  80 57.6 56.8 69.6 40 73.6 78.4 52 80 63.2 ...
 $ EX2: num  90 74.7 54.9 58 16.2 ...
 minimum  : 0.0000
 percent10: 62.5000
 quartile1: 75.0000
 median   : 85.0000
 mean     : 81.4323
 quartile3: 92.5000
 percent90: 95.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 15.9908
 missing  : 9.0000
 minimum  : 0.0000
 percent10: 70.0000
 quartile1: 80.5000
 median   : 95.0000
 mean     : 88.2341
 quartile3: 100.0000
 percent90: 100.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 15.9450
 missing  : 20.0000
 minimum  : 0.0000
 percent10: 77.5000
 quartile1: 87.5000
 median   : 95.0000
 mean     : 90.9997
 quartile3: 100.0000
 percent90: 100.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 13.9676
 missifunction (...) 
{
    if (length(outputArgs) != 0 && !hasExecuted$get()) {
        warning("Unused argument: outputArgs. The argument outputArgs is only ", 
            "meant to be used when embedding snippets of Shiny code in an ", 
            "R Markdown code chunk (using runtime: shiny). When running a ", 
            "full Shiny app, please set the output arguments directly in ", 
            "the corresponding output function of your UI code.")
        hasExecuted$set(TRUE)
    }
    if (is.null(formals(origRenderFunc))) 
        origRenderFunc()
    else origRenderFunc(...)
}
<environment: 0x000000001df70f18>
attr(,"class")
[1] "shiny.render.function" "function"             
attr(,"outputFunc")
function (outputId) 
{
    div(id = outputId, class = "shiny-html-output")
}
<environment: namespace:shiny>
attr(,"outputArgs")
list()
attr(,"hasExecuted")
<Mutable>
  Public:
    clone: function (deep = FALSE) 
    get: function () 
    set: function (value) 
  Private:
    value: FALSE
function (...) 
{
    if (length(outputArgs) != 0 && !hasExecuted$get()) {
        warning("Unused argument: outputArgs. The argument outputArgs is only ", 
            "meant to be used when embedding snippets of Shiny code in an ", 
            "R Markdown code chunk (using runtime: shiny). When running a ", 
            "full Shiny app, please set the output arguments directly in ", 
            "the corresponding output function of your UI code.")
        hasExecuted$set(TRUE)
    }
    if (is.null(formals(origRenderFunc))) 
        origRenderFunc()
    else origRenderFunc(...)
}
<environment: 0x0000000016792168>
attr(,"class")
[1] "shiny.render.function" "function"             
attr(,"outputFunc")
function (outputId) 
{
    div(id = outputId, class = "shiny-html-output")
}
<environment: namespace:shiny>
attr(,"outputArgs")
list()
attr(,"hasExecuted")
<Mutable>
  Public:
    clone: function (deep = FALSE) 
    get: function () 
    set: function (value) 
  Private:
    value: FALSE
 minimum  : 0.0000
 percent10: 60.0000
 quartile1: 74.2500
 median   : 85.0000
 mean     : 79.2380
 quartile3: 92.5000
 percent90: 95.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 20.5715
 missing  : 0.0000
 minimum  : 0.0000
 percent10: 60.0000
 quartile1: 74.2500
 median   : 85.0000
 mean     : 79.2380
 quartile3: 92.5000
 percent90: 95.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 20.5715
 missing  : 0.0000
 minimum  : 0.0000
 percent10: 60.0000
 quartile1: 74.2500
 median   : 85.0000
 mean     : 79.2380
 quartile3: 92.5000
 percent90: 95.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 20.5715
 missing  : 0.0000
$minimum
[1] 0

$percent10
[1] 60

$quartile1
[1] 74.25

$median
[1] 85

$mean
[1] 79.23802

$quartile3
[1] 92.5

$percent90
[1] 95

$maximum
[1] 100

$range
[1] 100

$stdev
[1] 20.57151

$missing
[1] 0

$minimum
[1] 0

$percent10
[1] 60

$quartile1
[1] 74.25

$median
[1] 85

$mean
[1] 79.23802

$quartile3
[1] 92.5

$percent90
[1] 95

$maximum
[1] 100

$range
[1] 100

$stdev
[1] 20.57151

$missing
[1] 0

 minimum  : 0.0000
 percent10: 60.0000
 quartile1: 74.2500
 median   : 85.0000
 mean     : 79.2380
 quartile3: 92.5000
 percent90: 95.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 20.5715
 missing  : 0.0000
 minimum  : 0.0000
 percent10: 60.0000
 quartile1: 74.2500
 median   : 85.0000
 mean     : 79.2380
 quartile3: 92.5000
 percent90: 95.0000
 maximum  : 100.0000
 range    : 100.0000
 stdev    : 20.5715
 missing  : 0.0000
